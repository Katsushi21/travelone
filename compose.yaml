services:
  db:
    image: postgres:${POSTGRES_VERSION}-alpine
    container_name: db
    hostname: travel-db.com
    # restart: always
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      # - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - TZ="Asia/Tokyo"
    ports:
      - 5432:5432

  app:
    build:
      context: ./app
      dockerfile: ./dockerfiles/develop/Dockerfile
      target: dev
    container_name: app
    hostname: travel-app.com
    ports:
      - '8000:8000'
    environment:
      # - SERVER_LOG=${SERVER_LOG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - TZ="Asia/Tokyo"
    volumes:
      - ./app:/traveling_alone
    depends_on:
      - db

  client:
    build:
      context: ./client
      dockerfile: ./dockerfiles/develop/Dockerfile
    container_name: client
    hostname: travel-client.com
    ports:
      - '3000:3000'
    volumes:
      - ./client:/traveling_alone
  # proxy:
  #   build: proxy
  #   container_name: proxy
  #   hostname: travel-proxy.com
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - client
