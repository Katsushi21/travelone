services:
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: ./dockerfiles/develop/Dockerfile
  #   container_name: client
  #   hostname: travel-back.com
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./client:/src/app

  server:
    build:
      context: ./server
      dockerfile: ./dockerfiles/develop/Dockerfile
      target: dev
    container_name: server
    hostname: travel-front.com
    ports:
      - "8000:8000"
    environment:
      - SERVER_LOG=${SERVER_LOG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
    volumes:
      - ./server:/src/app
    # depends_on:
    #   - client

  db:
    image: postgres:${POSTGRES_VERSION}-alpine
    container_name: db
    hostname: travel-db.com
    # restart: always
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      # - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
    expose:
      - 5432:5432
    depends_on:
      - server
  # proxy:
  #   build: proxy
  #   container_name: proxy
  #   hostname: travel-proxy.com
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - server
