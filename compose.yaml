services:
  db:
    image: postgres:${POSTGRES_VERSION}-alpine
    container_name: db
    hostname: db.travelone.com
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - TZ="Asia/Tokyo"
    ports:
      - 5432:5432

  app:
    build:
      context: ./app
      dockerfile: ./dockerfiles/develop/Dockerfile
    container_name: app
    hostname: app.travelone.com
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - REQUEST_ORIGIN=${REQUEST_ORIGIN}
      - TZ="Asia/Tokyo"
    volumes:
      - ./app:/src/app
    depends_on:
      - db

  auth:
    build:
      context: ./auth
      dockerfile: ./dockerfiles/develop/Dockerfile
    container_name: auth
    hostname: auth.travelone.com
    ports:
      - '8010:8010'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - REQUEST_ORIGIN=${REQUEST_ORIGIN}
      - TZ="Asia/Tokyo"
    volumes:
      - ./auth:/src/auth
    depends_on:
      - db

  client:
    build:
      context: ./client
      dockerfile: ./dockerfiles/develop/Dockerfile
    container_name: client
    hostname: client.travelone.com
    ports:
      - '3000:3000'
    environment:
      - NEXT_PUBLIC_GRAPHQL_REQUEST_DEST=${NEXT_PUBLIC_GRAPHQL_REQUEST_DEST}
      - TZ="Asia/Tokyo"
    volumes:
      - ./client:/src/client
    depends_on:
      - app

  www:
    build: www
    container_name: www
    hostname: www.travelone.com
    ports:
      - '8080:8080'
    depends_on:
      - client
