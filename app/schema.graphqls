###############
# scalar
###############
scalar Upload
scalar Time

###############
# Post
###############
type Post {
  id: ID!
  user_id: ID!
  title: String!
  body: String!
  img: String!
  createdAt: Time!
  updatedAt: Time!
  user: User!
  marker: Marker
  like: [Like]
  comment: [Comment]
}

input PostInput {
  user_id: ID!
  title: String!
  body: String!
  img: String!
}

###############
# Like
###############
type Like {
  post_id: ID!
  user_id: ID!
  post: Post!
  user: User!
}

input LikeInput {
  post_id: ID!
  user_id: ID!
}

###############
# User
###############
type User {
  id: ID!
  email: String!
  password: String!
  type: UserType!
  name: String!
  age: Int!
  gender: Gender!
  avatar: String!
  introduction: String!
  createdAt: Time!
  updatedAt: Time!
  friend: [Friend]
  mute: [Mute]
  post: [Post]
  like: [Like]
  comment: [Comment]
}

input UserInput {
  email: String!
  password: String!
  type: UserType!
  name: String!
  age: Int!
  gender: Gender!
  avatar: String!
  introduction: String!
}

input LoginInput {
  email: String!
  password: String!
}

enum UserType {
  active
  inactive
  admin
}

enum Gender {
  male
  female
  none
}

###############
# Session
###############
type Session {
  user_id: ID!
  session: String!
  updatedAt: Time!
}

input SessionInput {
  user_id: ID!
  session: String!
}

###############
# Friend
###############
type Friend {
  user_id: ID!
  friend_id: ID!
  friend: User!
}

input FriendInput {
  user_id: ID!
  friend_id: ID!
}

###############
# Mute
###############
type Mute {
  user_id: ID!
  mute_id: ID!
  mute: User!
}

input MuteInput {
  user_id: ID!
  mute_id: ID!
}

###############
# Marker
###############
type Marker {
  id: ID!
  post_id: ID!
  title: String!
  lat: String!
  lng: String!
  createdAt: Time!
  updatedAt: Time!
  post: Post!
}

input MarkerInput {
  post_id: ID!
  title: String!
  lat: String!
  lng: String!
}

###############
# Comment
###############
type Comment {
  id: ID!
  post_id: ID!
  user_id: ID!
  body: String!
  createdAt: Time!
  updatedAt: Time!
  post: Post!
  user: User!
}

input CommentInput {
  post_id: ID!
  user_id: ID!
  body: String!
}

###############
# Request
###############
type Request {
  user_id: ID!
  target_user_id: ID!
  status: RequestStatus!
  user: User!
  target_user: User!
}

enum RequestStatus {
  in_process
  accept
  deny
  break_in_process
  break_accept
  break_deny
  cancel
}

input RequestInput {
  user_id: ID!
  target_user_id: ID!
  status: RequestStatus!
}

###############
# File
###############
type File {
  path: String!
}

input UploadFile {
  content: Upload!
}

###############
# Query
###############
type Query {
  # All
  getAllPosts: [Post]!
  getAllUsers: [User]!
  getAllComments: [Comment]!
  getAllMarkers: [Marker]!
  getAllRequests: [Request]!
  getAllLikes: [Like]!
  getAllFriends: [Friend]!
  getAllMutes: [Mute]!

  # By ID
  getPostByID(id: ID!): Post!
  getUserByID(id: ID!): User!
  getCommentByID(id: ID!): Comment!
  getMarkerByID(id: ID!): Marker!

  # By User ID
  getPostByUserID(user_id: ID!): [Post]!
  getLikeByUserID(user_id: ID!): [Like]!
  getFriendByUserID(user_id: ID!): [Friend]!
  getMuteByUserID(user_id: ID!): [Mute]!
  getRequestByUserID(user_id: ID!): [Request]!
  getSessionByUserID(user_id: ID!): Session!
}

###############
# Mutation
###############
type Mutation {
  # CREATE
  createPost(input: PostInput!): Post!
  createUser(input: UserInput!): User!
  createSession(input: SessionInput!): Session!
  createMarker(input: MarkerInput!): Marker!
  createComment(input: CommentInput!): Comment!
  createRequest(input: RequestInput!): Request!
  createLike(input: LikeInput!): Like!
  createFriend(input: FriendInput!): Friend!
  createMute(input: MuteInput!): Mute!

  # UPDATE
  updatePost(id: ID!, input: PostInput!): Post!

  updateUser(id: ID!, input: UserInput!): User!
  updateSession(input: SessionInput!): Session!

  updateMarker(id: ID!, input: MarkerInput!): Marker!
  uploadFile(input: UploadFile!): File!
  updateRequest(input: RequestInput!): Request!

  # DELETE
  deletePost(id: ID!): Post!
  deleteLike(input: LikeInput!): Like!

  deleteUser(id: ID!): User!
  deleteSession(user_id: ID!): Session!
  deleteFriend(input: FriendInput!): Friend!
  deleteMute(input: MuteInput): Mute!

  deleteMarker(id: ID!): Marker!
  deleteComment(id: ID!): Comment!
  deleteRequest(input: RequestInput!): Request!

  # OTHER
  login(input: LoginInput!): User!
}
