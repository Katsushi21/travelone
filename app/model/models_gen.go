// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/99designs/gqlgen/graphql"
	"github.com/Katsushi21/travelone/ent/account"
	"github.com/Katsushi21/travelone/ent/request"
	"github.com/google/uuid"
)

type CreateAccountInput struct {
	CreatedAt    *time.Time     `json:"createdAt"`
	UpdatedAt    *time.Time     `json:"updatedAt"`
	Email        string         `json:"email"`
	Password     string         `json:"password"`
	Type         account.Type   `json:"type"`
	Name         string         `json:"name"`
	Age          int            `json:"age"`
	Gender       account.Gender `json:"gender"`
	Avatar       string         `json:"avatar"`
	Introduction string         `json:"introduction"`
}

type CreateCommentInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	Body      string     `json:"body"`
	PostID    uuid.UUID  `json:"postID"`
	AccountID uuid.UUID  `json:"accountID"`
}

type CreateFriendInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	AccountID uuid.UUID  `json:"accountID"`
	FriendID  uuid.UUID  `json:"friendID"`
}

type CreateLikeInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	AccountID uuid.UUID  `json:"accountID"`
	PostID    uuid.UUID  `json:"postID"`
}

type CreateMarkerInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	Title     string     `json:"title"`
	Lat       string     `json:"lat"`
	Lng       string     `json:"lng"`
	PostID    uuid.UUID  `json:"postID"`
}

type CreateMuteInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	AccountID uuid.UUID  `json:"accountID"`
	MuteID    uuid.UUID  `json:"muteID"`
}

type CreatePostInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	Title     string     `json:"title"`
	Body      string     `json:"body"`
	Img       string     `json:"img"`
	MarkerID  *uuid.UUID `json:"markerID"`
	AccountID uuid.UUID  `json:"accountID"`
}

type CreateRequestInput struct {
	CreatedAt *time.Time     `json:"createdAt"`
	UpdatedAt *time.Time     `json:"updatedAt"`
	Status    request.Status `json:"status"`
	AccountID uuid.UUID      `json:"accountID"`
	RequestID uuid.UUID      `json:"requestID"`
}

type CreateSessionInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	Session   string     `json:"session"`
	AccountID uuid.UUID  `json:"accountID"`
}

type File struct {
	Path string `json:"path"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type UpdateAccountInput struct {
	UpdatedAt    *time.Time      `json:"updatedAt"`
	Email        *string         `json:"email"`
	Password     *string         `json:"password"`
	Type         *account.Type   `json:"type"`
	Name         *string         `json:"name"`
	Age          *int            `json:"age"`
	Gender       *account.Gender `json:"gender"`
	Avatar       *string         `json:"avatar"`
	Introduction *string         `json:"introduction"`
}

type UpdateCommentInput struct {
	UpdatedAt *time.Time `json:"updatedAt"`
	Body      *string    `json:"body"`
	PostID    *uuid.UUID `json:"postID"`
	AccountID *uuid.UUID `json:"accountID"`
}

type UpdateMarkerInput struct {
	UpdatedAt *time.Time `json:"updatedAt"`
	Title     *string    `json:"title"`
	Lat       *string    `json:"lat"`
	Lng       *string    `json:"lng"`
	PostID    *uuid.UUID `json:"postID"`
}

type UpdatePostInput struct {
	UpdatedAt *time.Time `json:"updatedAt"`
	Title     *string    `json:"title"`
	Body      *string    `json:"body"`
	Img       *string    `json:"img"`
	MarkerID  *uuid.UUID `json:"markerID"`
	AccountID *uuid.UUID `json:"accountID"`
}

type UpdateRequestInput struct {
	UpdatedAt *time.Time      `json:"updatedAt"`
	Status    *request.Status `json:"status"`
	AccountID *uuid.UUID      `json:"accountID"`
	RequestID *uuid.UUID      `json:"requestID"`
}

type UpdateSessionInput struct {
	UpdatedAt *time.Time `json:"updatedAt"`
	Session   *string    `json:"session"`
	AccountID *uuid.UUID `json:"accountID"`
}

type UploadFile struct {
	Content graphql.Upload `json:"content"`
}
